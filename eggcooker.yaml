esphome:
  includes:
    - src/eggslice.h
    - src/eggslice.cpp
    - src/eggslice_GSLC.h
    - src/eggslice_GSLC.cpp
    - graphics/FreeSans14pt7b.h
    - graphics/NotoMono24pt7b.h
    - graphics/NotoSansBold14pt7b.h
    - graphics/dosis_book12pt7b.h
    - graphics/dosis_book16pt7b.h
    - graphics/FreeSans60pt7b.h
    - graphics/FreeSans40pt7b.h
    - graphics/pijlGlyph.h
    - graphics/wifinone.c
    - graphics/wifi33.c
    - graphics/wifi66.c
    - graphics/wifi100.c
    - graphics/soft_egg80.c
    - graphics/medium_egg80.c
    - graphics/hard_egg80.c
    - graphics/wekkerdonkerblauwklein.c
    - graphics/wekkerblauwklein.c

  libraries:
    - Wire
    - SPI
    - FS
    - SPIFFS
    - Preferences
    - adafruit/Adafruit BusIO
    - adafruit/Adafruit GFX Library
    - adafruit/Adafruit ILI9341
    - thingpulse/ThingPulse XPT2046 Touch
    - https://github.com/Amanoo/EggCooker_TFT_eSPI.git
    - https://github.com/Amanoo/EggCooker_GUIslice.git
  name: "eggcooker"

esp32:
  board: nodemcu-32s
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

web_server:
  port: 80

wifi:

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-eggcooker"
    password: ""

captive_portal:

# Define the custom component
custom_component:
  - id: cooker
    lambda: |-
      auto my_custom = new EggCooker(id(secs),id(timerstate),id(size),id(hardness),id(planOnOff),id(planninghours),id(planningminutes));
      App.register_component(my_custom);
      return {my_custom};


sensor:
  - platform: template
    name: "Egg Cooker Time"
    device_class: duration
    id: secs
    unit_of_measurement: s
    accuracy_decimals: 0
    icon: "mdi:timer-sand"

switch:
  - platform: template
    name: "Egg Cooker State"
    id: timerstate
    restore_mode: ALWAYS_OFF
    icon: "mdi:timer-cog-outline"
    turn_on_action:
      - lambda: |-
          timerOn();
    turn_off_action:
      - lambda: |-
          timerOff();
  - platform: template
    name: "Egg Cooker Planning on/off"
    id: planOnOff
    restore_mode: ALWAYS_OFF
    icon: "mdi:calendar-start"
    turn_on_action:
      - lambda: |-
          plannerOn();
    turn_off_action:
      - lambda: |-
          plannerOff();

select:
  - platform: template
    name: "Egg size"
    id: size
    restore_value: true
    set_action:
      - lambda: |-
          if(!id(timerstate).state)id(size).publish_state(x);
    on_value:
      - lambda: |-
          update_size();
    options:
      - S
      - M
      - L
      - XL
  - platform: template
    name: "Egg hardness"
    id: hardness
    icon: "mdi:egg-outline"
    restore_value: true
    set_action:
      - lambda: |-
          if(!id(timerstate).state)id(hardness).publish_state(x);
    on_value:
      - lambda: |-
          update_egg();
    options:
      - soft
      - medium
      - hard

number:
  - platform: template
    name: "Egg Cooker Planning Hours"
    unit_of_measurement: h
    min_value: 0
    max_value: 30
    step: 1
    id: planninghours
    icon: "mdi:calendar-clock"
    set_action:
      - lambda: |-
          set_planner_hours(x);
  - platform: template
    name: "Egg Cooker Planning Minutes"
    unit_of_measurement: min
    min_value: 0
    max_value: 59
    step: 1
    id: planningminutes
    icon: "mdi:calendar-clock"
    set_action:
      - lambda: |-
          set_planner_mins(x);
